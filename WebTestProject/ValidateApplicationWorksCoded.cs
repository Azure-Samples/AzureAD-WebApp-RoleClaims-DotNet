//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebTestProject
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class ValidateApplicationWorksCoded : WebTest
    {

        public ValidateApplicationWorksCoded()
        {
            this.Context.Add("Application", "https://localhost:44322");
            this.Context.Add("WebServer2", "https://login.microsoftonline.com");
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest((this.Context["Application"].ToString() + "/"));
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest((this.Context["Application"].ToString() + "/Account/SignIn"));
            request2.ExpectedResponseUrl = @"https://login.microsoftonline.com/7f58f645-c190-4ce5-9de4-e2b7acd2a6ab/oauth2/authorize?client_id=29572896-8e97-4dfa-9051-8d4f92159094&response_mode=form_post&response_type=code+id_token&scope=openid+profile&state=OpenIdConnect.AuthenticationProperties%3dwZvp83CH0Q4E_2J-bnWtMjf_86a7ovfyeiAmlX7gNe97FtdvxWMhrEHdmZ9xzTXZwtMkwTDGelC5OWwHASs6TmSU0t8pFKgB1xUggPSkLWY&nonce=636256929221097910.ZGM5OTY5M2ItMDZjNS00MzA1LTlmZTctMGNmOGY2Y2MyMTdlN2VjODdmNjYtYjkzMC00ZDBhLWIzMjEtZjAwOGQ0OTc1NGNh";
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            ExtractText extractionRule2 = new ExtractText();
            extractionRule2.StartsWith = "\"V\":\"";
            extractionRule2.EndsWith = "\"},\"w";
            extractionRule2.Index = 0;
            extractionRule2.IgnoreCase = false;
            extractionRule2.UseRegularExpression = false;
            extractionRule2.HtmlDecode = true;
            extractionRule2.Required = false;
            extractionRule2.ContextParameterName = "FormPostParam17.i14";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["WebServer2"].ToString() + "/common/userrealm"));
            request3.ThinkTime = 9;
            request3.Headers.Add(new WebTestRequestHeader("Accept", "application/json"));
            request3.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request3.QueryStringParameters.Add("user", "tasktrackerwebapp-approver%40msidentitysamplestesting.onmicrosoft.com", false, false);
            request3.QueryStringParameters.Add("api-version", "2.1", false, false);
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest((this.Context["WebServer2"].ToString() + "/7f58f645-c190-4ce5-9de4-e2b7acd2a6ab/login"));
            request4.Method = "POST";
            FormPostHttpBody request4Body = new FormPostHttpBody();
            request4Body.FormPostParameters.Add("login", "tasktrackerwebapp-approver@msidentitysamplestesting.onmicrosoft.com");
            request4Body.FormPostParameters.Add("passwd", "test123456789.");
            request4Body.FormPostParameters.Add("ctx", this.Context["$HIDDEN1.ctx"].ToString());
            request4Body.FormPostParameters.Add("flowToken", this.Context["$HIDDEN1.flowToken"].ToString());
            request4Body.FormPostParameters.Add("canary", this.Context["$HIDDEN1.canary"].ToString());
            request4Body.FormPostParameters.Add("dssoToken", this.Context["$HIDDEN1.dssoToken"].ToString());
            request4.Body = request4Body;
            ExtractHiddenFields extractionRule3 = new ExtractHiddenFields();
            extractionRule3.Required = true;
            extractionRule3.HtmlDecode = true;
            extractionRule3.ContextParameterName = "1";
            request4.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule3.Extract);
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest((this.Context["Application"].ToString() + "/"));
            request5.Method = "POST";
            request5.ExpectedResponseUrl = (this.Context["Application"].ToString() + "/");
            FormPostHttpBody request5Body = new FormPostHttpBody();
            request5Body.FormPostParameters.Add("code", this.Context["$HIDDEN1.code"].ToString());
            request5Body.FormPostParameters.Add("id_token", this.Context["$HIDDEN1.id_token"].ToString());
            request5Body.FormPostParameters.Add("state", this.Context["$HIDDEN1.state"].ToString());
            request5Body.FormPostParameters.Add("session_state", this.Context["$HIDDEN1.session_state"].ToString());
            request5.Body = request5Body;
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest((this.Context["Application"].ToString() + "/Tasks"));
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest((this.Context["Application"].ToString() + "/Tasks/TaskSubmit"));
            request7.Method = "POST";
            request7.ExpectedResponseUrl = (this.Context["Application"].ToString() + "/Tasks");
            FormPostHttpBody request7Body = new FormPostHttpBody();
            request7Body.FormPostParameters.Add("1", "In Progress");
            request7Body.FormPostParameters.Add("2", "Complete");
            request7Body.FormPostParameters.Add("4", "Not  Started");
            request7Body.FormPostParameters.Add("5", "Not  Started");
            request7.Body = request7Body;
            yield return request7;
            request7 = null;
        }
    }
}
