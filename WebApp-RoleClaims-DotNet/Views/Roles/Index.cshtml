@{
    ViewBag.Title = "Index";
}

@if (User.Identity.IsAuthenticated)
{
    <h2>Manage Application Roles</h2>

    //Form to Assign a New Role
    using (Html.BeginForm("AssignRole", "Roles", FormMethod.Post, new { id = "assign-form" }))
    {
        <input id="hidden-input" type="hidden" name="id" />
        <div id="assign-role">
            <div id="assign-role-form">
                <div id="assign-role-search" class="assign-role-row">
                    <p class="assign-role-label">Search for Users/Groups:</p>
                    <input id="search" type="text" name="input">
                </div>
                <div id="assign-role-select" class="assign-role-row">
                    <p class="assign-role-label">Select Role:</p>
                    <select name="role" id="assign-role-dropdown">
                        @foreach (KeyValuePair<string, string> kvp in (List<KeyValuePair<string, string>>)ViewData["roleGuids"])
                        {
                            <option class="assign-role" value="@kvp.Key"> @kvp.Value</option>
                        }
                    </select>
                </div>
                <div id="assign-role-submit" class="assign-role-row">
                    <p class="assign-role-label"></p>
                    <input type="submit" id="submit-button" value="Assign Role" />
                </div>
            </div>
        </div>

        <script>
            // People/Group Picker Code
            var maxResultsPerPage = 14;
            var searchUrl = window.location.protocol + "//" + window.location.host + "/Roles/Search";
            var input = document.getElementById("search");
            var token = "@ViewData["token"]";
            var tenant = "@ViewData["tenant"]";

            var picker = new AadPicker(searchUrl, maxResultsPerPage, input, token, tenant);

            // Submit the selected user/group to be asssigned.
            $("#submit-button").click({ picker: picker }, function () {
                if (!picker.Selected())
                    return;
                var form = $("#assign-form").get()[0].elements["id"].value = picker.Selected().objectId;  
            });

        </script>
    }

    //List out users in each role with checkboxes for removing roles
    using (Html.BeginForm("RemoveRole", "Roles", FormMethod.Post))
    {
        //foreach app role
        foreach (KeyValuePair<string, string> kvp in (List<KeyValuePair<string, string>>)ViewData["roleGuids"])
        {            
            <h3>@kvp.Value</h3>

            <table class="table table-bordered table-striped">
                <tr>
                    <th>Name</th>
                    <th>ObjectID</th>
                    <th>Delete</th>

                </tr>

                @*for each mapping entry in that role*@
                @foreach (WebApp_RoleClaims_DotNet.Models.Assignment assignment in (List<WebApp_RoleClaims_DotNet.Models.Assignment>)((Dictionary<string, List<WebApp_RoleClaims_DotNet.Models.Assignment>>)ViewData["roleAssignments"])[kvp.Key])
                {
                    <tr>
                        <td>
                            @assignment.displayName
                        </td>
                        <td>
                            @assignment.objectId
                        </td>
                        <td>
                            <input type="checkbox" name="@assignment.assignmentId @assignment.objectId @assignment.objectType" value="delete" />
                        </td>
                    </tr>
                }
            </table>
        }

        <input type="submit" value="Remove Roles" />
    }

}
